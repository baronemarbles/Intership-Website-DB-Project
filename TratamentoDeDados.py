# -*- coding: utf-8 -*-
"""xlsConversaoPromissora.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rA4IqBvzeCPGC7-32JLX-14_Mq9GvGhV
"""

#Importando as bibliotecas

import pandas as pd
import csv

#Instanciândo o arquivo xls

df = pd.read_excel('/content/bd_alteracao_comp_texto.xlsx')

#Mostrando o cabeçalho

df.head()

#Verificando se não há informações faltantes

print(df.isna())

#Pegando o tamanho válido da planilha
sz = 42913
#df.iloc[42913]

#Criando lista com os valores preenchidos
listaCrua = []

type(df.iloc[2,1])

for row in range(2,sz+1):
  for col in range(2,len(df.columns)):
    if(df.iloc[row,col]==df.iloc[row,col]):
      listaCrua.append(df.iloc[row,col])



print(listaCrua)

listaMorna = []

#def verifObs(x, y):
  #listaMorna.append('Obs:')
  #if(x[y+1]=='Produto:'):
    #listaMorna.append('N.A')
  #else:
    #listaMorna.append(x[y+1])
    #verifObs(x,y+1)

##verifObs Copilot
def verifObs(x, y):
  listaMorna.append('Obs.:')
  dados_obs = []
  i = y + 1
  if(x[i]=='Produto:'):
    listaMorna.append('N.A')

  else:
    while i < len(x) and x[i] != 'Produto:':
      dados_obs.append(x[i])
      i += 1
    listaMorna.append(' '.join(dados_obs))

listaCrua[73844]

#Tentativa resolução inteira com uma só função
#IGNORR POR ENQUANTO

#def listaMornaMethod(lista_,j):

  #if(j<len(listaMorna)-13):
    #for i in range(j,len(listaMorna)-13):
        #match(listaMorna[i]):
          #case 'Modelo:':
            #modelo.append(listaMorna[i+1])

          #case 'Marca:':
            #marca.append(listaMorna[i+1])

          #case 'Ativo:':
            #ativo.append(listaMorna[i+1])

          #case 'Id_patrimonio:':
            #id_patrimonio.append(listaMorna[i+1])

          #case 'Localizacao:':
            #localizacao.append(listaMorna[i+1])

          #case 'Obs:':
            #dados_obs = []
            #i = y + 1
            #if(x[i]=='Produto:'):
              #listaMorna.append('N.A')

            #else:
              #while i < len(x) and x[i] != 'Produto:':
                #dados_obs.append(x[i])
                #i += 1
              #listaMorna.append(' '.join(dados_obs))

    #listaMornaMethod(lista_,j+12)

for i in range(0,len(listaCrua)):
    match(listaCrua[i]):

        #Utilizando o índice do 'produto' para pegar o modelo
        case 'Produto:':
          #listaMorna.append(listaCrua[i])
          #listaMorna.append(listaCrua[i+1])
          listaMorna.append('Modelo:')
          listaMorna.append(listaCrua[i+3])

        case 'Marca:':
          listaMorna.append(listaCrua[i])
          listaMorna.append(listaCrua[i+1])

        case 'Ativo:':
          listaMorna.append(listaCrua[i])
          listaMorna.append(listaCrua[i+1])

        case 'Id_patrimonio:':
          listaMorna.append(listaCrua[i])
          listaMorna.append(listaCrua[i+1])

        case 'Localizacao:':
          listaMorna.append(listaCrua[i])
          listaMorna.append(listaCrua[i+1])

        case 'Obs.:':
          if(i+1==73845):
            listaMorna.append(listaCrua[i])
            listaMorna.append('N.A')

          else:
                verifObs(listaCrua,i)

print(listaMorna)

print(len(listaMorna))

#Criando listas para cada categoria de dado afim de criar um dataframe com o pandas
#patrimonio = 0
#modelo = 0
#localizacao = 0
#obs = 0
#marca = 0
#ativo = 0

#Criando lista das colunas copilot

data = { 'Modelo': [], 'Marca': [], 'Ativo': [], 'Id_patrimonio': [], 'Localizacao': [], 'Obs.': [] }

dataFormatado = { 'Modelo': [], 'Marca': [], 'Ativo': [], 'Id_patrimonio': [], 'Localizacao': [], 'Obs.': [] }

for i in range(0,len(listaMorna)):
  match(listaMorna[i]):
    case 'Modelo:':
      data['Modelo'].append(listaMorna[i+1])

    case 'Marca:':
      marca.append(listaMorna[i+1])

    case 'Ativo:':
      ativo.append(listaMorna[i+1])

    case 'Id_patrimonio:':
      patrimonio.append(listaMorna[i+1])

    case 'Localizacao:':
      localizacao.append(listaMorna[i+1])

    case 'Obs:':
      obs.append(listaMorna[i+1])



#Criando uma lista com o cabeçalho e seus valores para passar para o pandas e criar o dataframe

vetListas=  [{'Modelo':modelo,'Marca':marca,'Ativo':ativo,'Id_Patrimonio':patrimonio,'Localizacao':localizacao,'OBS':obs}]

df2 = pd.DataFrame(vetListas)

df2



#Extraindo para Excel para formatar com VBA
df2.to_excel("xlsMaybe.xlsx")

#finalizando a lista com as colunas 'data' e criando o dataframe Copilot
i = 0
while i < len(listaMorna):

  match (listaMorna[i]):
    case 'Modelo:':
       data['Modelo'].append(listaMorna[i + 1])

    case 'Marca:':
       data['Modelo'].append(listaMorna[i + 1])

    case 'Ativo:':
       data['Ativo'].append(listaMorna[i + 1])

    case 'Id_patrimonio:':
       data['Id_patrimonio'].append(listaMorna[i + 1])

    case 'Localizacao:':
       data['Localizacao'].append(listaMorna[i + 1])

    case 'Obs.:':
       data['Obs.'].append(listaMorna[i + 1])
  #if listaMorna[i] == 'Modelo:': data['Modelo'].append(listaMorna[i + 1])
  #elif listaMorna[i] == 'Marca:': data['Marca'].append(listaMorna[i + 1])
  #elif listaMorna[i] == 'Ativo:': data['Ativo'].append(listaMorna[i + 1])
  #elif listaMorna[i] == 'Id_patrimonio:': data['Id_patrimonio'].append(listaMorna[i + 1])
  #elif listaMorna[i] == 'Localizacao:': data['Localizacao'].append(listaMorna[i + 1])
  #elif listaMorna[i] == 'Obs.:': data['Obs.'].append(listaMorna[i + 1])

  i += 2

df4 = pd.DataFrame(data)
print(df4) # Salvar o DataFrame em um arquivo Excel df.to_excel('dados_filtrados.xlsx', index=False) print("Arquivo Excel criado com sucesso!")

df7 = pd.DataFrame(listaMorna)

df7

modelo = []
marca = []
ativo = []
id_patrimonio = []
localizacao = []
obs = []

print(listaMorna[12])
len(listaMorna)
print(listaMorna[len(listaMorna)-1])

# Processar os dados em grupos de 12 elementos (cada grupo representa um conjunto completo de dados)
for i in range(0, len(listaMorna), 12):
  modelo.append(listaMorna[i+1])
  marca.append(listaMorna[i+3])
  ativo.append(listaMorna[i+5])
  id_patrimonio.append(listaMorna[i+7])
  localizacao.append(listaMorna[i+9])
  if(i==len(listaMorna)-12):
    i==len(listaMorna)-1
    obs.append(listaMorna[i])
  else:
      obs.append(listaMorna[i+11])

  # Criar um DataFrame com os dados organizados
df8 = pd.DataFrame({ 'Modelo': modelo, 'Marca': marca, 'Ativo': ativo, 'Id_patrimonio': id_patrimonio, 'Localizacao': localizacao, 'Obs.': obs }) # Exibir o DataFrame

print(df8) # Salvar o DataFrame em um arquivo Excel

df.to_excel('dados_organizados.xlsx', index=False)

#df7.to_excel('df7.xlsx', index=False)

listaMornaMethod(listaMorna,0)

print(modelo)

len(modelo)

len(marca)

len(ativo)

len(id_patrimonio)

len(localizacao)

len(obs)



#Importando tabela arrumada, apenas faltando formatar os valores do patrimonio
#que são 'N.A' para '0' pois a coluna de Id.Patrimonio da base de dados não
#aceita outro tipo de dado alem de inteiro

#Importando o xls para finalizar as correções e colocar em csv.

df3= pd.read_excel('/content/tabelacsv.xlsx')

df3.head()

df3.iloc[2,3]

type(df3.iloc[2,3])

#Verificando se estou conseguindo identificar os valores 'N.A' e se realmente todos
#Estão sendo capturados. Possuo 75
count = 0

for data in range (0,len(df3)):
  if(df3.iloc[data,3]=='N.A'):
    print(df3.iloc[data,3])
    count+=1

print(count)

for data in range (0,len(df3)):
  if(df3.iloc[data,3]=='N.A'):
    df3.iloc[data,3]= 0

#verificando se todos os N.A foram atualizados
count = 0

for data in range (0,len(df3)):
  if(df3.iloc[data,3]==0):
    print(df3.iloc[data,3])
    count+=1

print(count)

df3.insert[0,6] = 0

df3.to_csv('saidateste.xlsx',index=False)

df4=pd.read_excel('/content/saidatesteW_User.xlsx')

df4.head()

df4.to_csv('TabelaFinalV1.csv',index=False)